"""Initial migration

Revision ID: 10975fef41fb
Revises: 
Create Date: 2025-06-16 09:58:08.841282

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '10975fef41fb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('quizzes')
    op.drop_table('user_answers')
    op.drop_table('question_options')
    op.drop_table('questions')
    op.drop_table('quiz_attempts')
    op.drop_table('results')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quiz_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='results_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='results_pkey')
    )
    op.create_table('quiz_attempts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('quiz_attempts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quiz_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='quiz_attempts_quiz_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='quiz_attempts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quiz_attempts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('questions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('questions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('quiz_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('question_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_num', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('option_a', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('option_b', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('option_c', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('option_d', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('correct_option', sa.VARCHAR(length=1), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='questions_quiz_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('question_options',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('question_options_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('option_text', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('is_correct', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order_num', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='question_options_question_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='question_options_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_answers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('attempt_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('selected_option_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('answer_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_correct', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('points_earned', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['quiz_attempts.id'], name='user_answers_attempt_id_fkey'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='user_answers_question_id_fkey'),
    sa.ForeignKeyConstraint(['selected_option_id'], ['question_options.id'], name='user_answers_selected_option_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_answers_pkey')
    )
    op.create_table('quizzes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='quizzes_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='quizzes_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='users_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
